# import CreateServiceInput from "./schema.graphql"

fragment Service on Service {
  id
  name
}

query GetUserServices($userId: ID!) {
  services: getUserServices(userId: $userId)
    @rest(
      type: "Service"
      path: "/internal/services/users/{args.userId}/services"
    ) {
    ...Service
  }
}

query GetService($id: ID!) {
  service: getService(id: $id)
    @rest(type: "Service", path: "/internal/services/services/{args.id}") {
    ...Service
  }
}

query GetServiceWithUsers($id: ID!) {
  service: getService(id: $id)
    @rest(type: "Service", path: "/internal/services/services/{args.id}") {
    id @export(as: "id")
    ...Service
    users
      @rest(
        type: "[ServiceUser]"
        path: "/internal/services/services/{exportVariables.id}/service-users"
      ) {
      user {
        id
        name
        email
      }
      role {
        name
      }
    }
  }
}

mutation CreateService($input: CreateServiceInput!) {
  service: createService(input: $input)
    @rest(
      type: "Service"
      path: "/internal/services/services"
      method: "POST"
    ) {
    ...Service
  }
}

mutation UpdateService($id: ID!, $input: UpdateServiceInput!) {
  service: updateService(id: $id, input: $input)
    @rest(
      type: "Service"
      path: "/internal/services/services/{args.id}"
      method: "PUT"
    ) {
    ...Service
  }
}

query GetServiceGatewayAccounts($serviceId: ID!) {
  gatewayAccounts: getServiceGatewayAccounts(serviceId: $serviceId)
    @rest(
      type: "[GatewayAccount]"
      path: "/internal/services/services/{args.serviceId}/gateway-accounts"
    ) {
    id
    type
  }
}
