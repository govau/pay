fragment Service on Service {
  id
  externalId
  name
  currentGoLiveStage
}

fragment Role on Role {
  id
  name
  description
}

fragment ServiceUser on ServiceUser {
  id
  insertedAt
  updatedAt
  externalId
  name
  email
  telephoneNumber
  platformAdmin
  role {
    id
    name
    description
  }
}

fragment ServiceInvite on ServiceInvite {
  id
  serviceId
  serviceName
  expiresAt
  isExpired
  invitedBy
  email
  role {
    id
    name
    description
  }
}

fragment GatewayAccount on GatewayAccount {
  id
  externalId
  type
  paymentProvider
  credentials {
    ... on BamboraCredentials {
      merchantId
      accountNumber
      apiUsername
    }
  }
  cardTypes {
    id
    label
  }
}

fragment GatewayAccountCredentials on GatewayAccountCredentials {
  ... on BamboraCredentials {
    merchantId
    accountNumber
    apiUsername
  }
}

fragment Product on Product {
  id
  externalId
  name
  nameSlug
  serviceNameSlug
  description
  referenceEnabled
  referenceLabel
  referenceHint
  price
}

fragment Payment on Payment {
  id
  externalId
  insertedAt
  updatedAt
  status
  amount
  reference
  description
  email
  gatewayTransactionId
  cardDetails {
    cardholderName
    cardNumber
    lastDigitsCardNumber
    firstDigitsCardNumber
    expiryDate
    cardBrand
  }
}

fragment PaymentEvent on TransactionEvent {
  id
  type
  status
  insertedAt
  updatedAt
}

fragment PaymentRefund on PaymentRefund {
  id
  reference
  amount
  status
  gatewayTransactionId
}

query GetUserServices {
  services {
    ...Service
  }

  serviceInvites {
    ...ServiceInvite
  }
}

query GetService($id: ID!) {
  service(id: $id) {
    ...Service
  }
}

query GetServiceWithGatewayAccounts($id: ID!) {
  service(id: $id) {
    ...Service
    gatewayAccounts {
      ...GatewayAccount
    }

    users {
      ...ServiceUser
    }

    invites {
      ...ServiceInvite
    }
  }
  roles {
    ...Role
  }
}

mutation CreateService($input: CreateServiceInput!) {
  service: createService(service: $input) {
    ...Service
  }
}

mutation InviteUser($serviceID: ID!, $email: String!, $role: String!) {
  service: inviteUser(serviceId: $serviceID, email: $email, role: $role) {
    ...Service
  }
}

mutation AcceptInvite($serviceID: ID!) {
  service: acceptInvite(serviceId: $serviceID) {
    ...Service
  }
}

mutation UpdateService($id: ID!, $input: UpdateServiceInput!) {
  service: updateService(id: $id, service: $input) {
    ...Service
  }
}

mutation SubmitRefund($paymentId: ID!, $amount: Int!, $reference: String) {
  refund: submitRefund(
    paymentId: $paymentId
    amount: $amount
    reference: $reference
  ) {
    ...PaymentRefund
  }
}

mutation UpdateGatewayAccountCardTypes(
  $gatewayAccountId: ID!
  $cardTypeIds: [ID!]!
) {
  gatewayAccount: updateGatewayAccountCardTypes(
    gatewayAccountId: $gatewayAccountId
    cardTypeIds: $cardTypeIds
  ) {
    ...GatewayAccount
  }
}

query GetGatewayAccounts($serviceId: ID!) {
  service(id: $serviceId) {
    gatewayAccounts {
      ...GatewayAccount
    }
  }
}

query GetGatewayAccount($id: ID!) {
  gatewayAccount(id: $id) {
    ...GatewayAccount
  }
}

mutation UpdateGatewayAccountCredentials(
  $gatewayAccountId: ID!
  $input: BamboraCredentialsInput!
) {
  gatewayAccount: updateGatewayAccountCredentials(
    gatewayAccountId: $gatewayAccountId
    credentials: $input
  ) {
    credentials {
      ...GatewayAccountCredentials
    }
  }
}

query GetProducts($serviceID: ID!) {
  service(id: $serviceID) {
    id
    gatewayAccounts {
      products {
        ...Product
      }
    }
  }
}

mutation CreateProduct($gatewayAccountId: ID!, $input: CreateProductInput!) {
  product: createProduct(gatewayAccountId: $gatewayAccountId, product: $input) {
    ...Product
  }
}

mutation UpdateProduct($id: ID!, $input: UpdateProductInput!) {
  product: updateProduct(id: $id, product: $input) {
    ...Product
  }
}

query GetPayments($serviceID: ID!) {
  service(id: $serviceID) {
    id
    gatewayAccounts {
      ...GatewayAccount
      payments {
        ...Payment
      }
    }
  }
}

query GetPayment($id: ID!) {
  payment(id: $id) {
    ...Payment
  }
}

query GetPaymentRefund($id: ID!) {
  payment(id: $id) {
    ...Payment
    refunds {
      ...PaymentRefund
    }
  }
}

query GetPaymentEvents($id: ID!) {
  payment(id: $id) {
    ...Payment
    events {
      ...PaymentEvent
    }
  }
}
